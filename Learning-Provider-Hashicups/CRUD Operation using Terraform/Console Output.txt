PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform init     

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/hashicups...
- Installing hashicorp/hashicups v0.3.1...
- Installed hashicorp/hashicups v0.3.1 (self-signed, key ID 97751AE79C450B19)

Partner and community providers are signed by their developers.
If you'd like to know more about provider signing, you can read about it here:
https://www.terraform.io/docs/cli/plugins/signing.html

Terraform has made some changes to the provider dependency selections recorded
in the .terraform.lock.hcl file. Review those changes and commit them to your
version control system if they represent changes you intended to make.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform plan     

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # hashicups_order.edu will be created
  + resource "hashicups_order" "edu" {
      + id           = (known after apply)
      + last_updated = (known after apply)

      + items {
          + quantity = 2

          + coffee {
              + description = (known after apply)
              + id          = 3
              + image       = (known after apply)
              + name        = (known after apply)
              + price       = (known after apply)
              + teaser      = (known after apply)
            }
        }
      + items {
          + quantity = 2

          + coffee {
              + description = (known after apply)
              + id          = 2
              + image       = (known after apply)
              + name        = (known after apply)
              + price       = (known after apply)
              + teaser      = (known after apply)
            }
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + edu_order = {
      + id           = (known after apply)
      + items        = [
          + {
              + coffee   = [
                  + {
                      + description = (known after apply)
                      + id          = 3
                      + image       = (known after apply)
                      + name        = (known after apply)
                      + price       = (known after apply)
                      + teaser      = (known after apply)
                    },
                ]
              + quantity = 2
            },
          + {
              + coffee   = [
                  + {
                      + description = (known after apply)
                      + id          = 2
                      + image       = (known after apply)
                      + price       = (known after apply)
                      + teaser      = (known after apply)
                    },
                ]
              + quantity = 2
            },
        ]
      + last_updated = (known after apply)
    }

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform apply -auto-approve
hashicups_order.edu: Creating...
hashicups_order.edu: Creation complete after 0s [id=1]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

edu_order = {
  "id" = "1"
  "items" = tolist([
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 3
          "image" = "/nomad.png"
          "name" = "Nomadicano"
          "price" = 150
          "teaser" = "Drink one today and you will want to schedule another"
        },
      ])
      "quantity" = 2
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 2
          "image" = "/vault.png"
          "name" = "Vaulatte"
          "price" = 200
          "teaser" = "Nothing gives you a safe and secure feeling like a Vaulatte"
        },
      ])
      "quantity" = 2
    },
  ])
  "last_updated" = tostring(null)
}
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform state show hashicups_order.edu
# hashicups_order.edu:
resource "hashicups_order" "edu" {
    id = "1"

    items {
        quantity = 2

        coffee {
            id     = 3
            image  = "/nomad.png"
            price  = 150
            teaser = "Drink one today and you will want to schedule another"
        }
    }
    items {
        quantity = 2

        coffee {
            id     = 2
            image  = "/vault.png"
            name   = "Vaulatte"
            price  = 200
            teaser = "Nothing gives you a safe and secure feeling like a Vaulatte"
        }
    }
}
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform apply -auto-approve
hashicups_order.edu: Refreshing state... [id=1]

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

edu_order = {
  "id" = "1"
  "items" = tolist([
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 3
          "image" = "/nomad.png"
          "name" = "Nomadicano"
          "price" = 150
          "teaser" = "Drink one today and you will want to schedule another"
        },
      ])
      "quantity" = 2
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 2
          "image" = "/vault.png"
          "name" = "Vaulatte"
          "price" = 200
          "teaser" = "Nothing gives you a safe and secure feeling like a Vaulatte"
        },
      ])
      "quantity" = 2
    },
  ])
  "last_updated" = tostring(null)
}
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform apply
hashicups_order.edu: Refreshing state... [id=1]

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

edu_order = {
  "id" = "1"
  "items" = tolist([
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 3
          "image" = "/nomad.png"
          "name" = "Nomadicano"
          "price" = 150
          "teaser" = "Drink one today and you will want to schedule another"
        },
      ])
      "quantity" = 2
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 2
          "image" = "/vault.png"
          "name" = "Vaulatte"
          "price" = 200
          "teaser" = "Nothing gives you a safe and secure feeling like a Vaulatte"
        },
      ])
      "quantity" = 2
    },
  ])
  "last_updated" = tostring(null)
}
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform apply -auto-approve
hashicups_order.edu: Refreshing state... [id=1]
hashicups_order.edu: Modifying... [id=1]
hashicups_order.edu: Modifications complete after 0s [id=1]

Apply complete! Resources: 0 added, 1 changed, 0 destroyed.

Outputs:

edu_order = {
  "id" = "1"
  "items" = tolist([
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 3
          "image" = "/nomad.png"
          "name" = "Nomadicano"
          "price" = 150
          "teaser" = "Drink one today and you will want to schedule another"
        },
      ])
      "quantity" = 3
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 2
          "image" = "/vault.png"
          "name" = "Vaulatte"
          "price" = 200
          "teaser" = "Nothing gives you a safe and secure feeling like a Vaulatte"
        },
      ])
      "quantity" = 6
    },
  ])
  "last_updated" = tostring(null)
}
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform apply -auto-approve
hashicups_order.edu: Refreshing state... [id=1]

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

edu_order = {
  "id" = "1"
  "items" = tolist([
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 3
          "image" = "/nomad.png"
          "name" = "Nomadicano"
          "price" = 150
          "teaser" = "Drink one today and you will want to schedule another"
        },
      ])
      "quantity" = 3
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 2
          "image" = "/vault.png"
          "name" = "Vaulatte"
          "price" = 200
          "teaser" = "Nothing gives you a safe and secure feeling like a Vaulatte"
      ])
      "quantity" = 6
    },
  ])
  "last_updated" = "Sunday, 11-Apr-21 16:15:23 IST"
}
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform apply -auto-approve

Error: Reference to undeclared resource

  on main.tf line 29, in output "coffe_id":
  29:   value = hashicups_ingredients.item1

A managed resource "hashicups_ingredients" "item1" has not been declared in
the root module.

PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform apply -auto-approve
hashicups_order.edu: Refreshing state... [id=1]

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

coffe_id = {
  "coffee_id" = 2
  "id" = "2"
  "ingredients" = tolist([
    {
      "id" = 1
      "name" = "ingredient - Espresso"
      "quantity" = 40
      "unit" = "ml"
    },
    {
      "id" = 2
      "name" = "ingredient - Semi Skimmed Milk"
      "quantity" = 300
      "unit" = "ml"
    },
  ])
}
edu_order = {
  "id" = "1"
  "items" = tolist([
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 3
          "image" = "/nomad.png"
          "name" = "Nomadicano"
          "price" = 150
          "teaser" = "Drink one today and you will want to schedule another"
        },
      ])
      "quantity" = 3
    {
      "coffee" = tolist([
        {
          "description" = ""
          "id" = 2
          "image" = "/vault.png"
          "name" = "Vaulatte"
          "price" = 200
          "teaser" = "Nothing gives you a safe and secure feeling like a Vaulatte"
        },
      ])
      "quantity" = 6
    },
  ])
  "last_updated" = "Sunday, 11-Apr-21 16:15:23 IST"
}
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform output coffe_id
{
  "id" = "2"
  "ingredients" = tolist([
    {
      "id" = 1
      "name" = "ingredient - Espresso"
      "quantity" = 40
      "unit" = "ml"
    },
    {
      "id" = 2
      "name" = "ingredient - Semi Skimmed Milk"
      "quantity" = 300
      "unit" = "ml"
    },
  ])
}
PS C:\Users\Aman Borkar\Desktop\VS XD\learn-terraform-hashicups-provider> terraform destroy

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # hashicups_order.edu will be destroyed
  - resource "hashicups_order" "edu" {
      - id           = "1" -> null
      - last_updated = "Sunday, 11-Apr-21 16:15:23 IST" -> null

      - items {
          - quantity = 3 -> null

          - coffee {
              - id     = 3 -> null
              - image  = "/nomad.png" -> null
              - name   = "Nomadicano" -> null
              - price  = 150 -> null
              - teaser = "Drink one today and you will want to schedule another" -> null
            }
        }
      - items {
          - quantity = 6 -> null

          - coffee {
              - id     = 2 -> null
              - image  = "/vault.png" -> null
              - name   = "Vaulatte" -> null
              - price  = 200 -> null
              - teaser = "Nothing gives you a safe and secure feeling like a Vaulatte" -> null
            }
        }
    }

Plan: 0 to add, 0 to change, 1 to destroy.

Changes to Outputs:
  - coffe_id  = {
      - coffee_id   = 2
      - id          = "2"
      - ingredients = [
          - {
              - id       = 1
              - name     = "ingredient - Espresso"
              - quantity = 40
              - unit     = "ml"
            },
          - {
              - id       = 2
              - name     = "ingredient - Semi Skimmed Milk"
              - quantity = 300
              - unit     = "ml"
            },
        ]
    } -> null
  - edu_order = {
      - id           = "1"
      - items        = [
          - {
              - coffee   = [
                  - {
                      - description = ""
                      - id          = 3
                      - image       = "/nomad.png"
                      - name        = "Nomadicano"
                      - price       = 150
                      - teaser      = "Drink one today and you will want to schedule another"
                    },
                ]
              - quantity = 3
            },
          - {
              - coffee   = [
                  - {
                      - description = ""
                      - id          = 2
                      - image       = "/vault.png"
                      - name        = "Vaulatte"
                      - price       = 200
                      - teaser      = "Nothing gives you a safe and secure feeling like a Vaulatte"
                    },
                ]
              - quantity = 6
            },
        ]
      - last_updated = "Sunday, 11-Apr-21 16:15:23 IST"
    } -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

hashicups_order.edu: Destroying... [id=1]
hashicups_order.edu: Destruction complete after 0s

Destroy complete! Resources: 1 destroyed.